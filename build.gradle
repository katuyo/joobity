buildscript {
  ext {
    kotlinVersion = "1.3.50"
    joobyVersion = "2.6.1"
  }

  repositories {
    mavenLocal()
    jcenter()
    mavenCentral()
  }

  dependencies {
    classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
    classpath "com.google.gradle:osdetector-gradle-plugin:1.4.0"
    classpath "io.spring.gradle:dependency-management-plugin:1.0.8.RELEASE"
    classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
    classpath "io.jooby:jooby-gradle-plugin:$joobyVersion"
    classpath "com.github.jengelman.gradle.plugins:shadow:5.1.0"
  }
}
apply plugin: "io.spring.dependency-management"
apply plugin: "com.google.osdetector"
apply plugin: "com.github.johnrengelman.shadow"
apply plugin: "application"
apply plugin: "org.jetbrains.kotlin.kapt"
apply plugin: "kotlin"
apply plugin: "jooby"

group "org.featx.joobity"
version "1.0.0"
mainClassName = "org.featx.joobity.AppKt"
sourceCompatibility = 1.8

repositories {
  mavenLocal()
  jcenter()
  mavenCentral()
}

dependencyManagement {
  imports {
    mavenBom "io.jooby:jooby-bom:$joobyVersion"
  }
}

dependencies {
  kapt "io.jooby:jooby-apt"
  compile "io.jooby:jooby-netty"
  compile 'io.jooby:jooby-jackson'
  compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
  compile "ch.qos.logback:logback-classic"

  testCompile "org.junit.jupiter:junit-jupiter-api"
  testCompile "org.junit.jupiter:junit-jupiter-engine"
  testCompile "io.jooby:jooby-test"
  testCompile "com.squareup.okhttp3:okhttp"
}

test {
  useJUnitPlatform()
}

/** Kotlin debug information: */
tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
  kotlinOptions.javaParameters = true
}

shadowJar {
  mergeServiceFiles()
}
